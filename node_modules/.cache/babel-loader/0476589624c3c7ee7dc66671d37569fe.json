{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avadhut.sutar\\\\Grocers\\\\final\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\n\nconst App = () => {\n  // HINT: each \"item\" in our list names a name,\n  // a boolean to tell if its been completed, and a quantity\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState(''); //const [totalItemCount, setTotalItemCount] = useState(1);\n\n  const handleAddButtonClick = () => {\n    const newItem = {\n      itemName: inputValue,\n      quantity: 1,\n      isSelected: false\n    };\n    const newItems = [...items, newItem];\n    setItems(newItems);\n    setInputValue('');\n    calculateTotal();\n  };\n\n  const handleQuantityIncrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity++;\n    setItems(newItems);\n    calculateTotal();\n  };\n\n  const handleQuantityDecrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity--;\n    setItems(newItems); // calculateTotal();\n  };\n\n  const toggleComplete = index => {\n    const newItems = [...items];\n    newItems[index].isSelected = !newItems[index].isSelected;\n    setItems(newItems);\n  }; // const calculateTotal = () => {\n  // const totalItemCount = items.reduce((total, item) => {\n\n\n  return total + item.quantity; // }, 0);\n  // setTotalItemCount(totalItemCount);\n  // };\n\n  const clearAll = itemList => {\n    document.getElementById(\"itemList\").innerHTML = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, \"Grocery List\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-item-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    className: \"add-item-input\",\n    placeholder: \"Add an item...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add\",\n    onClick: () => handleAddButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, \" Add\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Clear\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"itemList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-name\",\n    onClick: () => toggleComplete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, item.isSelected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, item.itemName)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, item.itemName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleQuantityDecrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \" \", item.quantity, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleQuantityIncrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \" + \")))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/avadhut.sutar/Grocers/final/src/App.js"],"names":["React","useState","useEffect","App","items","setItems","inputValue","setInputValue","handleAddButtonClick","newItem","itemName","quantity","isSelected","newItems","calculateTotal","handleQuantityIncrease","index","handleQuantityDecrease","toggleComplete","total","item","clearAll","itemList","document","getElementById","innerHTML","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name,\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([]);\n\n\tconst [inputValue, setInputValue] = useState('');\n\t//const [totalItemCount, setTotalItemCount] = useState(1);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\t// const calculateTotal = () => {\n\t\t// const totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t// }, 0);\n\n\t\t// setTotalItemCount(totalItemCount);\n\t// };\n\n\t const clearAll =(itemList) => {\n\t\t document.getElementById(\"itemList\").innerHTML = \"\" ;\n\t\t \n\t }\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t<h1>Grocery List</h1>\n\t\t\t\t<span><div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<span><button className=\"add\" onClick={() => handleAddButtonClick()}> Add</button></span>\n\t\t\t\t\t <div><input type=\"button\" value=\"Clear\" onClick={clearAll} /></div> \n\t\t\t\t\t</div></span>\n\t\t\t\t\t{/* <button className=\"clearButton\" onClick={clearAll}>clear</button> */}\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div id='itemList'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>-</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}> + </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{/* <div className='total'>Total: {totalItemCount}</div> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}