{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\avadhut.sutar\\\\Grocers\\\\final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\avadhut.sutar\\\\Grocers\\\\final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./index.css';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faChevronRight,faChevronLeft,faCircle,faCheckCircle,faPlus}from'@fortawesome/free-solid-svg-icons';var App=function App(){// HINT: each \"item\" in our list names a name,\n// a boolean to tell if its been completed, and a quantity\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),totalItemCount=_useState6[0],setTotalItemCount=_useState6[1];var handleAddButtonClick=function handleAddButtonClick(){var newItem={itemName:inputValue,quantity:1,isSelected:false};var newItems=[].concat(_toConsumableArray(items),[newItem]);setItems(newItems);setInputValue('');calculateTotal();};var handleQuantityIncrease=function handleQuantityIncrease(index){var newItems=_toConsumableArray(items);newItems[index].quantity++;setItems(newItems);calculateTotal();};var handleQuantityDecrease=function handleQuantityDecrease(index){var newItems=_toConsumableArray(items);newItems[index].quantity--;setItems(newItems);calculateTotal();};var toggleComplete=function toggleComplete(index){var newItems=_toConsumableArray(items);newItems[index].isSelected=!newItems[index].isSelected;setItems(newItems);};var calculateTotal=function calculateTotal(){var totalItemCount=items.reduce(function(total,item){return total+item.quantity;},0);setTotalItemCount(totalItemCount);};var clearAll=function clearAll(itemList){document.getElementById(\"itemList\").innerHTML=\"\";};return/*#__PURE__*/React.createElement(\"div\",{className:\"app-background\"},/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Grocery List\"),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"add-item-box\"},/*#__PURE__*/React.createElement(\"input\",{value:inputValue,onChange:function onChange(event){return setInputValue(event.target.value);},className:\"add-item-input\",placeholder:\"Add an item...\"}),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"add\",onClick:function onClick(){return handleAddButtonClick();}},\" Add\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"button\",value:\"Clear\",onClick:clearAll})))),/*#__PURE__*/React.createElement(\"div\",{id:\"itemList\"},items.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"item-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"item-name\",onClick:function onClick(){return toggleComplete(index);}},item.isSelected?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{className:\"completed\"},item.itemName)):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,item.itemName))),/*#__PURE__*/React.createElement(\"div\",{className:\"quantity\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleQuantityDecrease(index);}},\"-\"),/*#__PURE__*/React.createElement(\"span\",null,\" \",item.quantity,\" \"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleQuantityIncrease(index);}},\" + \")));}))));};export default App;","map":{"version":3,"sources":["C:/Users/avadhut.sutar/Grocers/final/src/App.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faChevronRight","faChevronLeft","faCircle","faCheckCircle","faPlus","App","items","setItems","inputValue","setInputValue","totalItemCount","setTotalItemCount","handleAddButtonClick","newItem","itemName","quantity","isSelected","newItems","calculateTotal","handleQuantityIncrease","index","handleQuantityDecrease","toggleComplete","reduce","total","item","clearAll","itemList","document","getElementById","innerHTML","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name,\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([]);\n\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [totalItemCount, setTotalItemCount] = useState(1);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\tconst calculateTotal = () => {\n\t\tconst totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0);\n\n\t\tsetTotalItemCount(totalItemCount);\n\t};\n\n\t const clearAll =(itemList) => {\n\t\t document.getElementById(\"itemList\").innerHTML = \"\" ;\n\t\t \n\t }\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t<h1>Grocery List</h1>\n\t\t\t\t<span><div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<span><button className=\"add\" onClick={() => handleAddButtonClick()}> Add</button></span>\n\t\t\t\t\t <div><input type=\"button\" value=\"Clear\" onClick={clearAll} /></div> \n\t\t\t\t\t</div></span>\n\t\t\t\t\t{/* <button className=\"clearButton\" onClick={clearAll}>clear</button> */}\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div id='itemList'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>-</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}> + </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{/* <div className='total'>Total: {totalItemCount}</div> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}