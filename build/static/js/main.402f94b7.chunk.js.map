{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","inputValue","setInputValue","className","value","onChange","event","target","placeholder","onClick","newItem","itemName","quantity","isSelected","newItems","handleAddButtonClick","type","itemList","document","getElementById","innerHTML","id","map","item","index","toggleComplete","handleQuantityDecrease","handleQuantityIncrease","ReactDOM","render"],"mappings":"mKA6GeA,EA1GH,WAGX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAwDA,OACC,yBAAKC,UAAU,kBACd,yBAAKA,UAAU,kBACf,4CACC,8BAAM,yBAAKA,UAAU,gBACpB,2BAAOC,MAAOH,EAAYI,SAAU,SAACC,GAAD,OAAWJ,EAAcI,EAAMC,OAAOH,QAAQD,UAAU,iBAAiBK,YAAY,mBACzH,8BAAM,4BAAQL,UAAU,MAAMM,QAAS,kBA3Dd,WAC5B,IAAMC,EAAU,CACfC,SAAUV,EACVW,SAAU,EACVC,YAAY,GAGPC,EAAQ,sBAAOf,GAAP,CAAcW,IAE5BV,EAASc,GACTZ,EAAc,IAiDkCa,KAAvC,SACL,6BAAK,2BAAOC,KAAK,SAASZ,MAAM,QAAQK,QAZ5B,SAACQ,GAChBC,SAASC,eAAe,YAAYC,UAAY,SAmB/C,yBAAKC,GAAG,YACNtB,EAAMuB,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKrB,UAAU,kBACd,yBAAKA,UAAU,YAAYM,QAAS,kBAvCnB,SAACe,GACvB,IAAMV,EAAQ,YAAOf,GAErBe,EAASU,GAAOX,YAAcC,EAASU,GAAOX,WAE9Cb,EAASc,GAkCsCW,CAAeD,KACvDD,EAAKV,WACL,oCAEC,0BAAMV,UAAU,aAAaoB,EAAKZ,WAGnC,oCAEC,8BAAOY,EAAKZ,YAIf,yBAAKR,UAAU,YACd,4BAAQM,QAAS,kBA9DO,SAACe,GAC/B,IAAMV,EAAQ,YAAOf,GAErBe,EAASU,GAAOZ,WAEhBZ,EAASc,GAyDoBY,CAAuBF,KAA9C,KACA,kCAAQD,EAAKX,SAAb,KACA,4BAAQH,QAAS,kBAzEO,SAACe,GAC/B,IAAMV,EAAQ,YAAOf,GAErBe,EAASU,GAAOZ,WAEhBZ,EAASc,GAoEoBa,CAAuBH,KAA9C,gBC7FRI,IAASC,OACL,kBAAC,EAAD,MACFX,SAASC,eAAe,U","file":"static/js/main.402f94b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name,\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([]);\n\n\tconst [inputValue, setInputValue] = useState('');\n\t//const [totalItemCount, setTotalItemCount] = useState(1);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\t// calculateTotal();\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\t// const calculateTotal = () => {\n\t\t// const totalItemCount = items.reduce((total, item) => {\n\t\t\t// return total + item.quantity;\n\t\t// }, 0);\n\n\t\t// setTotalItemCount(totalItemCount);\n\t// };\n\n\t const clearAll =(itemList) => {\n\t\t document.getElementById(\"itemList\").innerHTML = \"\" ;\n\t\t \n\t }\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t<h1>Grocery List</h1>\n\t\t\t\t<span><div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<span><button className=\"add\" onClick={() => handleAddButtonClick()}> Add</button></span>\n\t\t\t\t\t <div><input type=\"button\" value=\"Clear\" onClick={clearAll} /></div> \n\t\t\t\t\t</div></span>\n\t\t\t\t\t{/* <button className=\"clearButton\" onClick={clearAll}>clear</button> */}\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div id='itemList'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>-</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}> + </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{/* <div className='total'>Total: {totalItemCount}</div> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}